package com.example.andenk.schichtln.gui

import android.app.Activity
import android.content.DialogInterface
import android.content.Intent
import android.os.Bundle
import android.support.v4.app.Fragment
import android.support.v4.app.FragmentManager
import android.support.v4.app.FragmentStatePagerAdapter
import android.support.v7.app.AppCompatActivity
import com.android.volley.Response
import com.example.andenk.schichtln.R
import com.example.andenk.schichtln.helper.DBHelper
import com.example.andenk.schichtln.helper.Helper
import com.example.andenk.schichtln.pojos.Position
import com.example.andenk.schichtln.pojos.User
import com.example.andenk.schichtln.webservice.WebService
import com.google.gson.Gson
import kotlinx.android.synthetic.main.activity_main.*
import org.json.JSONArray

class MainActivity : AppCompatActivity() {
    val ws = WebService()
    val gson = Gson()
    val RESULTCODE_LOGIN = 10

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        var db = DBHelper(this)
        if (db.getCurrentUser() == null) {
            startActivityForResult(Intent(this, LoginDialog().javaClass), RESULTCODE_LOGIN)
        } else {

            if (db.getCurrentUser() == null) {
                btn_logout.text = "login"
            } else {
                btn_logout.text = "${db.getCurrentUser()!!.nickname} ausloggen"
            }
            buildPager()
        }
        btn_logout.setOnClickListener({ l ->
            if (db.getCurrentUser() == null) {
                startActivityForResult(Intent(this, LoginDialog().javaClass), RESULTCODE_LOGIN)
            } else {
                var helper = Helper()
                helper.createAlert(
                        this@MainActivity,
                        "${db.getCurrentUser()!!.nickname} wirklich abmelden?",
                        DialogInterface.OnClickListener(
                                { d: DialogInterface,
                                  i ->
                                    btn_logout.text = "login"
                                    db.deleteCurrentUser()
                                    buildPager()
                                    startActivityForResult(Intent(this, LoginDialog().javaClass), RESULTCODE_LOGIN)
                                }
                        )
                ).show()
            }
        }
        )
    }

    private fun buildPager() {

        var db = DBHelper(this)
        if (db.getCurrentUser() != null) {
            ws.getPositionsByUser(this, db.getCurrentUser()!!, Response.Listener {
                var list: ArrayList<Position> = ArrayList()
                var i = 0
                var jsonArray: JSONArray = it as JSONArray
                print(jsonArray)
                while (i < jsonArray.length()) {
                    var position = gson.fromJson(jsonArray.get(i).toString(), Position::class.java)
                    list.add(position)
                    i++
                }
                list.reverse()
                v_pager_main.adapter = VPagerAdapter(supportFragmentManager, list)
            },
                    Response.ErrorListener {
                        println(it.message)
                    })
        }else{
            v_pager_main.adapter = null
        }
    }

    class VPagerAdapter(fm: FragmentManager?, var list: ArrayList<Position>) : FragmentStatePagerAdapter(fm) {

        var ret: Fragment = Fragment()


        /**
         * Return the Fragment associated with a specified position.
         */
        override fun getItem(position: Int): Fragment {

            var positionFragment = PositionFragment()
            if (position > 1 && position < list.size + 2) {
                var args = Bundle()


                args.putSerializable("position", list.get(position - 2))
                positionFragment.arguments = args
            }
            when (position) {
                0 -> ret = CalendarFragment()
                1 -> ret = PersonalFragment()
                list.size + 2 -> ret = WebViewFragment()


                else -> ret = positionFragment
            }

            return ret
        }

        /**
         * Return the number of views available.
         */
        override fun getCount(): Int {
            return list.size + 3
        }
    }

    public override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent) {


        if (resultCode == Activity.RESULT_OK) {

            if (requestCode == RESULTCODE_LOGIN) {
                var user: User = data.getSerializableExtra("user") as User
                var db = DBHelper(this)
                db.setUser(user)
                btn_logout.text = "${user.nickname} ausloggen"

            }

        }
        buildPager()
    }
}
