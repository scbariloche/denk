package com.example.andenk.schichtln.gui

import android.content.Context
import android.content.DialogInterface
import android.os.Bundle
import android.support.v4.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.ArrayAdapter
import android.widget.ListView
import android.widget.TextView
import android.widget.Toast
import com.example.andenk.schichtln.R
import com.example.andenk.schichtln.helper.Data
import com.example.andenk.schichtln.helper.Helper
import com.example.andenk.schichtln.pojos.DayUser
import kotlinx.android.synthetic.main.display_user_list.view.*
import kotlinx.android.synthetic.main.fragment_list.*
import kotlinx.android.synthetic.main.fragment_list.view.*
import java.text.SimpleDateFormat
import java.util.*
import kotlin.collections.ArrayList


/**
 * A simple [Fragment] subclass.
 * Activities that contain this fragment must implement the
 * [ListFragment.OnFragmentInteractionListener] interface
 * to handle interaction events.
 * Use the [ListFragment.newInstance] factory method to
 * create an instance of this fragment.
 */
class ListFragment : Fragment() {
    var userlistview: ListView? = null
    var openlistview: ListView? = null
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
    }

    override fun onCreateView(inflater: LayoutInflater?, container: ViewGroup?,
                              savedInstanceState: Bundle?): View? {
        // Inflate the layout for this fragment

        var view: View = inflater!!.inflate(R.layout.fragment_list, container, false)
        userlistview = view.list_user_days
        openlistview = view.list_open_days
        update()




        return view
    }

    fun update() {
        var myList: ArrayList<DayUser> = ArrayList()

        for (i in Data()?.daysusers) {
            if (i.user.id == 1) {
                myList.add(i)
            }
        }

        var openList: ArrayList<DayUser> = ArrayList()
        for (i in Data()?.daysusers) {
            if (i.state.id == 1) {
                openList.add(i)
            }
        }



        userlistview?.adapter = UserListAdapter(activity, myList)


        openlistview?.adapter = OpenListAdapter(activity, openList)
    }


    inner class UserListAdapter(context: Context?,
                                objects: MutableList<DayUser>?) : ArrayAdapter<DayUser>(context, 0, objects) {


        var objects: MutableList<DayUser>? = objects
        var vi: LayoutInflater = context!!.getSystemService(Context.LAYOUT_INFLATER_SERVICE) as LayoutInflater


        override fun getView(position: Int, convertView: View?, parent: ViewGroup): View? {
            var holder: ViewHolder
            var retView: View
            var item: DayUser = objects!!.get(position)
            if (convertView == null) {
                retView = vi.inflate(R.layout.display_user_list, null)
                holder = ViewHolder()

                holder.tv1 = retView.display_userlist_tv1
                holder.tv2 = retView.display_userlist_tv2
                holder.tv3 = retView.display_userlist_tv3

                holder.tv2!!.text = item.type.description

                var sdf = SimpleDateFormat("EE dd.MM.yy")

                var date = Date(item.day.date)
                holder.tv1!!.text = sdf.format(date)

                holder.tv3!!.text = item.day.note

                retView.tag = holder //error in this line

            } else {
                holder = convertView.tag as ViewHolder
                retView = convertView
            }


            retView.setOnClickListener(View.OnClickListener { v ->
                Helper().createAlert(
                        activity,
                        "möchtest du diese Schicht offen anbieten?",
                        DialogInterface.OnClickListener { dialog, i ->
                            Toast.makeText(activity,
                                    "die anderen werden benachrichtigt", Toast.LENGTH_LONG).show()
                            Data().daysusers.remove(item)
                            item.state = Data().states.get(1)
                            Data().daysusers.add(item)

                            update()
                        },
                        DialogInterface.OnClickListener { dialog, which -> }).show()
            })



            return retView
        }


        inner class ViewHolder {
            var tv1: TextView? = null
            var tv2: TextView? = null
            var tv3: TextView? = null
        }
    }

    inner class OpenListAdapter(context: Context?,
                                objects: MutableList<DayUser>?
    ) : ArrayAdapter<DayUser>(context, 0, objects) {


        var objects: MutableList<DayUser>? = objects
        var vi: LayoutInflater = context!!.getSystemService(Context.LAYOUT_INFLATER_SERVICE) as LayoutInflater


        override fun getView(position: Int, convertView: View?, parent: ViewGroup): View? {
            var holder: ViewHolder
            var retView: View
            var item: DayUser = objects!!.get(position)
            if (convertView == null) {
                retView = vi.inflate(R.layout.display_user_list, null)
                holder = ViewHolder()

                holder.tv1 = retView.display_userlist_tv1
                holder.tv2 = retView.display_userlist_tv2
                holder.tv3 = retView.display_userlist_tv3

                holder.tv2!!.text = item.type.description

                var sdf = SimpleDateFormat("dd.MM.yy")

                var date = Date(item.day.date)
                holder.tv1!!.text = sdf.format(date)

                holder.tv3!!.text = item.day.note

                retView.tag = holder //error in this line

            } else {
                holder = convertView.tag as ViewHolder
                retView = convertView
            }


            retView.setOnClickListener(View.OnClickListener { v ->
                Helper().createAlert(
                        activity,
                        "möchtest du diese Schicht annehmen?",
                        DialogInterface.OnClickListener { dialog, i ->
                            Toast.makeText(activity,
                                    "die Schicht gehört dir", Toast.LENGTH_LONG).show()
                            Data().daysusers.remove(item)
                            item.user = Data().users.get(0)
                            Data().daysusers.add(item)
                            update()


                        },
                        DialogInterface.OnClickListener { dialog, which -> }).show()
            })



            return retView
        }


        inner class ViewHolder {
            var tv1: TextView? = null
            var tv2: TextView? = null
            var tv3: TextView? = null
        }
    }
}
